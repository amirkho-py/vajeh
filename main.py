# Vajeh
# By Amirhossein Khosravi  - github:amirkho-py - instagram: amirkho.ir - twitter: amirkho_ir - telegram: amirkho_ir
# GUI generated by the Tkinter Designer
# Version 1.0.0

from pathlib import Path
import sqlite3
from tkinter import END, Label, Tk, Canvas, Entry, Text, Button, PhotoImage
import webbrowser


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path("./assets")


def relative_to_assets(path: str):
    '''
    return assets path to easy access 
    '''
    return ASSETS_PATH / Path(path)


# Config main window
window = Tk()
window.geometry("450x630+0+0")
window.configure(bg = "#FFFFFF")
window.title("VAJEH - OFFLINE DICTIONARY EN-FA")




logo_image = PhotoImage(
    file=relative_to_assets("icon.png")
)
window.iconphoto(True,logo_image)



canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 600,
    width = 450,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
title = canvas.create_text(
    32.0,
    22.0,
    anchor="nw",
    text="VAJEH OFFLINE DICTIONARY EN-FA",
    fill="#000000",
    justify="center",
    font=("Inter", 23 * -1),
)

image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    82.0,
    130.0,
    image=image_image_1
)

entry_image_1 = PhotoImage(
    file=relative_to_assets("entry_1.png"))
entry_bg_1 = canvas.create_image(
    264.5,
    130.0,
    image=entry_image_1
)
entry_1 = Entry(
    bd=0,
    bg="#EFEFEF",
    highlightthickness=0
)
entry_1.place(
    x=142.0,
    y=104.0,
    width=245.0,
    height=50.0
)


image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
image_2 = canvas.create_image(
    82.0,
    300.0,
    image=image_image_2
)

entry_image_2 = PhotoImage(
    file=relative_to_assets("entry_2.png"))
entry_bg_2 = canvas.create_image(
    264.5,
    420.0,
    image=entry_image_2
)
entry_2 = Text(
    bd=0,
    bg="#EFEFEF",
    highlightthickness=0,
    font=("Shabnam",13)
)
entry_2.place(
    x=142.0,
    y=272.0,
    width=245.0,
    height=294.0
)




def switch():
    '''
    Switch language function
    '''
    entry_1.delete('0',END) # DELETE ENTRY DATA WHEN SWITCH LANG
    entry_2.delete("1.0",END) # DELETE ENTRY DATA WHEN SWITCH LANG

    if button_1['text'] == "EN": # SET SOURCE LANGUAGE TO FARSI

        button_1.configure(text="FA")
        image_image_1.configure(file=relative_to_assets("image_1.png"))
        image_image_2.configure(file=relative_to_assets("image_2.png"))
        button_image_2.configure(file=relative_to_assets("button_2.png"))
        entry_1.configure(justify="left")
        about.config(text="V1.0.0 - click to read more",font=("Inter",11))
        
        
    elif button_1['text'] != "EN": # SET SOURCE LANGUAGE TO ENGLISH
        button_1.configure(text="EN")
        image_image_2.configure(file=relative_to_assets("image_1.png"))
        image_image_1.configure(file=relative_to_assets("image_2.png"))
        button_image_2.configure(file=relative_to_assets("button_3.png"))
        entry_1.config(font=("Shabnam",12))
        entry_1.configure(justify="right")
        entry_2.configure(font=("Shabnam",15))
        about.config(text="نسخه ۱.۰.۰ - برای اطلاعات بیشتر کلیک کنید",font=("Shabnam",10))
        

        



# SWITCH LANGUAGE BUTTON
button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    text="EN",
    relief="flat",
    command=switch
)

button_1.place(
    x=63.0,
    y=198.0,
    width=32.0,
    height=32.0
)


global source_lang 
source_lang = button_1["text"]

def search():
    '''
    Fetch words from database function
    '''
    entry_2.delete("1.0",END)
    global source_lang 
    source_lang = button_1["text"]
    db = sqlite3.connect(relative_to_assets("Dictionary-en-fa.sqlite"))
    cur = db.cursor()
    if  source_lang == 'EN':
        query = f"SELECT EnglishWord FROM Words WHERE PersianWord LIKE '{entry_1.get()}'"
    else:
        query = f"SELECT PersianWord FROM Words WHERE EnglishWord LIKE '{entry_1.get()}'"
    data = cur.execute(query).fetchall()
    db.close()


    # CONVERT FETCHED DB DATA TO LIST TYPE 
    results = list()
    for x in data:
        results.append(x[0]) 

    # CONVERT ALL RESULTS TO STRING TYPE SEPRATE WITH \n AND PUT IN TEXTAREA
    for word in results:
        results_string = ""
        results_string+=word+'\n'

        # SET FARSI RESULTS VIEW TO RTL
        if button_1['text'] == "FA":
            entry_2.tag_configure('tag-right', justify='right')
            entry_2.insert("1.0",results_string,"tag-right")
        # SET ENGLISH RESULTS VIEW TO LTR
        else:
            entry_2.tag_configure('tag-left', justify='left')
            entry_2.insert("1.0",results_string,"tag-left")







# SEARCH BUTTON
button_image_2 = PhotoImage(
    file=relative_to_assets("button_2.png"))
button_2 = Button(
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    command=search,
    relief="flat"
)
button_2.place(
    x=225.0,
    y=199.0,
    width=85.0,
    height=30.0
)




def text_to_speech():
    '''
    text to speech function
    '''
    pass




# TEXT TO SPEECH BUTTON
button_image_4 = PhotoImage(
    file=relative_to_assets("button_4.png"))
button_4 = Button(
    image=button_image_4,
    borderwidth=0,
    highlightthickness=0,
    command=text_to_speech,
    relief="flat"
)
button_4.place(
    x=63.0,
    y=374.0,
    width=32.0,
    height=32.0
)



def about_app(event):
    webbrowser.open("https://github.com/amirkho-py/vajeh")

about = Label(window,text="V1.0.0 - click to read more",font=("Inter",11),bg="#ffffff")
about.place(x=260,y=605)

about.bind('<Button>',about_app)


window.resizable(False, False)

if __name__ == "__main__":
    switch() # TO DETECT SOURCE LANGUAGE STATE AT START
    window.mainloop()





